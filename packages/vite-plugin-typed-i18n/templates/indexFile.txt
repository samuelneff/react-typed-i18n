///////////////////////////////////
//
// GENERATED FILE - DO NOT EDIT
//
// Entrypoint for generated localized strings.
//

export const locales = [
];

export const defaultLocale = '%appliedDefaultLocale%';

export interface LocalizedStrings {
  locale: string;
%stringsTypeSections%
}

%propTypeDeclarations%

export const localeProvider = {
  locales: [
    %localeList%
  ],
  defaultLocale: '%appliedDefaultLocale%',

  async getLocale(locale: string) {
    if (!this.locales.includes(locale)) {
      throw new Error(`Requested an unsupported locale. Requested ${ locale }. Available locales are ${ locales.join(', ') }.`);
    }

    const stringsModule = await import(`./${ locale }`);
    return stringsModule.strings as LocalizedStrings;
  }
};
